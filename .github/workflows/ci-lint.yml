name: Run cargo fmt and cargo clippy

on:
  push:
    branches: ['*']
  pull_request:
    branches: [ "main" ]
  

jobs:
  clippy_check:
    name: Cargo Clippy lint check
    env:
      # Set RUSTFLAGS for Clippy linting
      # RUSTFLAGS: |
      #   -Dwarnings                        # Treat warnings as errors
      #   -W clippy::print_stdout           # Warn on use of 'print' and 'println!'
      #   -W clippy::unwrap_used            # Warn on use of '.unwrap()'
      #   -A unused                         # Allow unused code (false positive occurences in query-perf)
      #   -A clippy::module_inception       # Allow module inception (module with same name as the file)
      #   -A clippy::ptr_arg                # Allow passing references as function parameters
      #   -A clippy::type_complexity        # Allow complex types without warning
      RUSTFLAGS: |
        -Dwarnings                        
        -W clippy::print_stdout       
        -W clippy::unwrap_used    
        -A unused                         
        -A clippy::module_inception       
        -A clippy::ptr_arg                
        -A clippy::type_complexity        
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install specific Rust version
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.83.0 # Pin to a specific Rust version
          override: true

      - name: Install Clippy
        run: rustup component add clippy rustfmt
      - name: Run Cargo Clippy
        run: cargo clippy --all-targets --all-features


  fmt_check:
    name: Format check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install latest nightly
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
        with:
            toolchain: nightly
            override: true

      - name: Run Cargo fmt
        run: |
          rustup component add --toolchain nightly-x86_64-unknown-linux-gnu rustfmt
          cargo fmt -- --check